name: PR build

on:
  pull_request:

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  check_codestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.3.0
      - name: Set up JDK 17 for running Gradle
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 17
      - name: Run ktlint
        run: ./gradlew ktlintCheck
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.3.0
      - name: Set up JDK 17 for running Gradle
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 17
      - name: Build and test
        run: touch ./local.properties; ./gradlew check javadoc assemble

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.3.0
      - name: Set up JDK 17 for running Gradle
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 17
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest
  instrumented_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [ 29 ]
    steps:
      - uses: actions/checkout@v4.3.0
      - name: Set up JDK 17 for running Gradle
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 17
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v3
      - name: Setup AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Run Instrumented Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest

  jacoco_test_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.3.0
      - name: Set up JDK 17 for running Gradle
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 17
      - name: Run Jacoco
        run: ./gradlew jacocoTestReport
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  check_links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.3.0
      - name: Link Checker
        uses: lycheeverse/lychee-action@v2.4.1
        with:
          fail: true
          lycheeVersion: v0.19.1